import type { Bud } from '../../bud.js';
import type * as Locations from '../../types/registry/locations.js';
type Handle = `${keyof Locations.Sync}`;
type AbsolutePath = `/${string}`;
type RelativePath = `${string}`;
type HandleSlashPath = `${Handle}/${string}`;
type FileHandle = `@path` | `@name` | `@file` | `@project`;
/**
 * Transform `@alias` path
 *
 * @param app - Bud instance
 * @param base - Path segment(s)
 * @returns string
 */
export declare const parseAlias: (app: Bud, ...base: Array<string>) => string;
/**
 * Transform `@alias` path
 *
 * @param app - Bud instance
 * @param base - Path segment
 * @returns string
 */
export interface path {
    (base?: keyof Locations.SyncRegistry | FileHandle | HandleSlashPath | RelativePath | AbsolutePath, ...segments: Array<string>): string;
}
export declare const path: path;
export {};
//# sourceMappingURL=path.d.ts.map