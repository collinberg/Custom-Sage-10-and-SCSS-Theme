import { Filesystem as FS, json, yml } from '@roots/bud-support/filesystem';
import { S3 } from '@roots/filesystem/s3';
import type { Bud } from '../bud.js';
/**
 * Filesystem service
 */
export default class FileSystem extends FS {
    _app: () => Bud;
    /**
     * Access {@link Bud}
     *
     * @public @readonly
     */
    get app(): Bud;
    /**
     * Logger
     *
     * @public
     */
    get logger(): import("../index.js").Logger;
    /**
     * JSON handling
     *
     * @public
     */
    json: typeof json;
    /**
     * S3 instance
     *
     * @public
     */
    s3: S3;
    /**
     * YML handling
     *
     * @public
     */
    yml: typeof yml;
    /**
     * Class constructor
     *
     * @public
     */
    constructor(_app: () => Bud);
    /**
     * Set bucket
     *
     * @param bucket - {@link S3.bucket}
     * @public
     */
    setBucket(bucket: string): this;
    /**
     * Set credentials
     *
     * @param credentials - {@link S3.credentials}
     * @public
     */
    setCredentials(credentials: S3[`config`][`credentials`]): this;
    /**
     * Set endpoint
     *
     * @param options - upload options
     * @public
     */
    setEndpoint(endpoint: S3[`config`][`endpoint`]): this;
    /**
     * Set S3 region
     *
     * @param options - upload options
     * @public
     */
    setRegion(region: S3[`config`][`region`]): this;
    /**
     * Upload files to S3
     *
     * @param options - upload options
     * @public
     */
    upload(options?: {
        source?: string;
        destination?: string;
        files?: string;
        keep?: number | false;
    }): this;
}
//# sourceMappingURL=fs.d.ts.map