import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { disabled, expose, label, options, } from '@roots/bud-framework/extension/decorators';
/**
 * Terser extension
 *
 * @public
 * @decorator `@label`
 * @decorator `@expose`
 * @decorator `@options`
 * @decorator `@disabled`
 */
let BudMinimizeCss = class BudMinimizeCss extends Extension {
    /**
     * `buildBefore` callback
     *
     * @public
     * @decorator `@bind`
     */
    async buildBefore({ hooks, module }) {
        const { Plugin } = await module.import(`@roots/bud-support/css-minimizer-webpack-plugin`);
        hooks.on(`build.optimization.minimizer`, (minimizer = []) => {
            minimizer.push(new Plugin(this.options));
            return minimizer;
        });
    }
};
BudMinimizeCss = __decorate([
    label(`@roots/bud-terser/css-minimizer`),
    expose(`minimizeCss`),
    options({
        minimizerOptions: {
            preset: [
                `default`,
                {
                    discardComments: {
                        removeAll: true,
                    },
                },
            ],
        },
    }),
    disabled
], BudMinimizeCss);
export { BudMinimizeCss };
//# sourceMappingURL=extension.js.map