import { __decorate, __metadata } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, label } from '@roots/bud-framework/extension/decorators';
import eventCompilerDone from './hooks/event.compiler.done.js';
/**
 * Acorn adapter
 *
 * @public
 * @decorator `@label`
 */
let Acorn = class Acorn extends Extension {
    /**
     * `register` callback
     *
     * @public
     * @decorator `@bind`
     */
    async register(bud) {
        bud.extensions
            .get(`@roots/bud-entrypoints`)
            .setOption(`publicPath`, ``);
        this.logger.success(`unset entrypoints publicPath`);
        bud.extensions
            .get(`@roots/bud-extensions/webpack-manifest-plugin`)
            .setOption(`publicPath`, ``);
        this.logger.success(`unset manifest publicPath`);
        /**
         * Write hmr.json
         */
        if (bud.isDevelopment) {
            bud.hooks.action(`compiler.close`, eventCompilerDone);
            this.logger.success(`registered compiler.close callback`);
        }
    }
};
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", Promise)
], Acorn.prototype, "register", null);
Acorn = __decorate([
    label(`@roots/sage/acorn`)
], Acorn);
export default Acorn;
//# sourceMappingURL=extension.js.map