import { urlToHttpOptions } from 'node:url';
/**
 * `compiler.done` callback
 *
 * @remarks
 * Generates and emits `hmr.json` with proxy/dev server information
 * for use in Acorn.
 */
export default async function (bud) {
    try {
        if (bud.hasChildren) {
            await Promise.all(Object.values(bud.children).map(async (bud) => await writeIfEnabled(bud)));
        }
        else {
            await writeIfEnabled(bud);
        }
    }
    catch (error) {
        bud.error(error);
    }
}
const writeIfEnabled = async (bud) => {
    if (!bud.extensions.has(`@roots/sage`) ||
        !(await bud.extensions.get(`@roots/sage`).isEnabled()))
        return;
    await writeJson(bud);
};
const writeJson = async function (bud) {
    const devUrl = bud.root.hooks.filter(`dev.url`, new URL(`http://0.0.0.0:3000`));
    const proxyUrl = bud.root.hooks.filter(`dev.middleware.proxy.options.target`, new URL(`http://0.0.0.0`));
    const publicPath = bud.root.hooks.filter(`build.output.publicPath`);
    const writePath = bud.path(`@dist`, `hmr.json`);
    await bud.fs.exists(writePath);
    await bud.fs.write(writePath, {
        dev: devUrl instanceof URL ? urlToHttpOptions(devUrl) : devUrl,
        proxy: proxyUrl instanceof URL ? urlToHttpOptions(proxyUrl) : proxyUrl,
        publicPath,
    });
};
//# sourceMappingURL=event.compiler.done.js.map