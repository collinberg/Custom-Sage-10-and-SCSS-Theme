import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { disabled, expose, label, } from '@roots/bud-framework/extension/decorators';
/**
 * Extension enabling ESM compilation output
 *
 * @public
 * @decorator `@label`
 * @decorator `@expose`
 * @decorator `@disabled`
 */
let Esm = class Esm extends Extension {
    /**
     * `buildBefore` callback
     *
     * @public
     * @decorator `@bind`
     */
    async buildBefore(bud) {
        bud.hooks.fromMap({
            'build.experiments': experiments => ({
                ...(experiments ?? {}),
                outputModule: true,
            }),
            'build.output.module': true,
        });
        bud.context.manifest?.imports &&
            bud.hooks.on(`build.externals`, (existant) => ({
                ...(existant ?? {}),
                ...bud.context.manifest.imports,
            }));
    }
};
Esm = __decorate([
    label(`@roots/bud-extensions/esm`),
    expose(`esm`),
    disabled
], Esm);
export default Esm;
//# sourceMappingURL=index.js.map